type Query {
  hello: String
  findUsers: [User]!
  findCompanies: [Company]!
  findTasks: [Task]!
  findProjects: [Project]!
}

type Mutation {
  createUser(user: UserInput): User
  createCompany(company: CompanyInput): Company
  createProject(project: ProjectInput): Project
  createTask(task: TaskInput): Task
}

input UserInput {
  company_id: Int
  firstname: String!
  lastname: String!
  email: String!
  password: String
}

input CompanyInput {
  name: String!
}

input ProjectInput {
  company_id: Int!
  name: String!
}

input TaskInput {
  project_id: Int!
  name: String!
  status: String!
}

type User {
  id: Int!
  company_id: Int
  firstname: String!
  lastname: String!
  company: Company
  project: [Project!]
  email: String
  password: String
}

type Company {
  id: Int!
  owner_id: Int
  name: String!
  owner: User
  users: [User!]
}

type Project {
  id: Int!
  company_id: Int!
  name: String!
  company: Company
  users: [User!]
}

type Task {
  id: Int!
  project_id: Int!
  name: String!
  status: String!
  project: Project
}
